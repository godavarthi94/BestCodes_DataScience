About dataset: This is a the 3 year HDFC bank transaction statement of our personal account. It has all the narrations and transaction details of the detibs and credits whoch help 
us to do the spend and savings analysis

# Importing Libraries
import numpy as np
import pandas as pd
import matplotlib.pyplot as plt
import matplotlib.colors
import seaborn as sns
from sklearn import neighbors, datasets
import warnings
%matplotlib inline
# Read File
hdfc = pd.read_csv(r'C:\\Users\\user\\Desktop\\hdfc.csv')
hdfc.head()
Date	Narration	Chq./Ref.No.	Value Dt	Withdrawal	Deposit	Closing Balance
0	27/02/17	NEFT CR-BOFA0MM6205-ACCENTURE SOLUTIONS PVT LT...	2.27202E+14	27/02/17	NaN	30293.0	30293.0
1	3/3/2017	ATW-416021XXXXXX9801-S1ANHD68-HYDERABAD	4897	3/3/2017	1000.0	NaN	29293.0
2	9/3/2017	NEFT DR-SBIN0005646-GODAVARTHI RAM KIRAN-NETBA...	N068170257467000	9/3/2017	3000.0	NaN	26293.0
3	10/3/2017	POS 416021XXXXXX9801 PAYTM MOBILE SOL POS DEBIT	7.06907E+11	10/3/2017	500.0	NaN	25793.0
4	10/3/2017	POS 416021XXXXXX9801 BARBEQUE NATION POS DEBIT	7.06922E+11	10/3/2017	1820.0	NaN	23973.0

# Conerting date time format
hdfc['Date'] = pd.to_datetime(hdfc1['Date'], errors='coerce')
hdfc['Value Dt'] = pd.to_datetime(hdfc1['Value Dt'], errors='coerce')

# Type casting Narration as categoricak variable
hdfc['Narration']= hdfc1['Narration'].astype("category")
hdfc['Chq./Ref.No.']= hdfc1['Chq./Ref.No.'].astype("category")

# Data Info
hdfc.info()
<class 'pandas.core.frame.DataFrame'>
Int64Index: 1137 entries, 0 to 503
Data columns (total 7 columns):
Date               1137 non-null datetime64[ns]
Narration          1137 non-null object
Chq./Ref.No.       1137 non-null object
Value Dt           1137 non-null datetime64[ns]
Withdrawal         747 non-null float64
Deposit            390 non-null float64
Closing Balance    1137 non-null float64
dtypes: datetime64[ns](2), float64(3), object(2)
memory usage: 71.1+ KB

# Data Description
hdfc.describe()
Withdrawal	Deposit	Closing Balance
count	747.000000	390.000000	1137.000000
mean	3406.414418	6539.948051	22052.124494
std	12076.903404	19821.606379	21843.457948
min	-10000.000000	0.610000	17.820000
25%	260.000000	170.000000	6673.300000
50%	735.980000	506.500000	16671.080000
75%	3000.000000	4000.000000	29780.100000
max	281000.000000	300000.000000	305058.570000

# Null values analysis
hdfc.isnull().sum()
Date                 0
Narration            0
Chq./Ref.No.         0
Value Dt             0
Withdrawal         390
Deposit            747
Closing Balance      0
dtype: int64
hdfc['year'] = hdfc['Date'].dt.year
# Extracting 'month' column seperately
hdfc['month'] = hdfc['Date'].dt.month


# Group by Visulalisation
hdfc.groupby(['month','year'])[['Withdrawal ']].count()
Withdrawal
month	year	
1	2017	0
2018	14
2019	28
2	2017	2
2018	13
2019	17
3	2017	12
2018	24
2019	41
4	2017	13
2018	20
2019	30
5	2017	16
2018	18
2019	39
6	2017	13
2018	26
2019	22
7	2017	16
2018	30
2019	24
8	2017	11
2018	27
2019	25
9	2017	18
2018	31
2019	24
10	2017	7
2018	29
2019	30
11	2017	8
2018	10
2019	25
12	2017	17
2018	41
2019	26
hdfc.groupby(['year','month'])[['Withdrawal ']].count()
Withdrawal
year	month	
2017	1	0
2	2
3	12
4	13
5	16
6	13
7	16
8	11
9	18
10	7
11	8
12	17
2018	1	14
2	13
3	24
4	20
5	18
6	26
7	30
8	27
9	31
10	29
11	10
12	41
2019	1	28
2	17
3	41
4	30
5	39
6	22
7	24
8	25
9	24
10	30
11	25
12	26
hdfc.groupby(['month','year'])[['Deposit ']].count()
Deposit
month	year	
1	2017	3
2018	10
2019	14
2	2017	1
2018	7
2019	15
3	2017	3
2018	13
2019	17
4	2017	1
2018	6
2019	24
5	2017	2
2018	7
2019	10
6	2017	5
2018	21
2019	14
7	2017	3
2018	16
2019	23
8	2017	3
2018	9
2019	15
9	2017	7
2018	23
2019	13
10	2017	2
2018	33
2019	11
11	2017	4
2018	10
2019	10
12	2017	6
2018	21
2019	8
# Using NLP to work on the categorical variables

import reimport nltk
nltk.download('all')
import re 
from nltk import word_tokenize
hdfc['Narration']= hdfc['Narration'].astype(str)
hdfc.info()
hdfc['tokens']=  hdfc['Narration'].apply(word_tokenize)

hdfc['new_col'] = hdfc['Narration'].str.split(' ').str[0]
hdfc['new_col'] = hdfc['new_col'].str.split('-').str[0]
hdfc.to_csv(r'C:\\Users\\user\\Desktop\\hdfc.csv')

hdfc['Kiran'] = hdfc['Narration'].str.split('KIRAN').str[1]
hdfc.drop(['atm'], axis=1)
hdfc.info()
hdfc= hdfc.drop(['atm'], axis=1)
hdfc.info()

